 https://github.com/torvalds/linux/commit/e1d35d4dc7f089e6c9c080d556feedf9c706f0c7
 
 
 
 
 
 
 
 * "raddr" thing points to kernel space, and there has to be a wrapper around		   * "raddr" thing points to kernel space, and there has to be a wrapper around
   * this.		   * this.
   */		   */
 -long do_shmat(int shmid, char __user *shmaddr, int shmflg, ulong *raddr,		 +long do_shmat(int shmid, char __user *shmaddr, int shmflg,
 -	      unsigned long shmlba)		 +	      ulong *raddr, unsigned long shmlba)
  {		  {
  	struct shmid_kernel *shp;		  	struct shmid_kernel *shp;
  	unsigned long addr;		  	unsigned long addr;
 @@ -1113,8 +1113,13 @@ long do_shmat(int shmid, char __user *shmaddr, int shmflg, ulong *raddr,
  		goto out;		  		goto out;
  	else if ((addr = (ulong)shmaddr)) {		  	else if ((addr = (ulong)shmaddr)) {
  		if (addr & (shmlba - 1)) {		  		if (addr & (shmlba - 1)) {
 -			if (shmflg & SHM_RND)		 +			/*
 -				addr &= ~(shmlba - 1);	   /* round down */		 +			 * Round down to the nearest multiple of shmlba.
 +			 * For sane do_mmap_pgoff() parameters, avoid
 +			 * round downs that trigger nil-page and MAP_FIXED.
 +			 */
 +			if ((shmflg & SHM_RND) && addr >= shmlba)
 +				addr &= ~(shmlba - 1);
  			else		  			else
  #ifndef __ARCH_FORCE_SHMLBA		  #ifndef __ARCH_FORCE_SHMLBA
  				if (addr & ~PAGE_MASK)		  				if (addr & ~PAGE_MASK)
